# Generated by Django 3.1.5 on 2021-01-26 08:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'auth_user',
                'verbose_name_plural': 'auth_users',
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cinema_Halls',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=200)),
                ('status', models.IntegerField(default=1)),
            ],
            options={
                'verbose_name': 'cinemahall',
                'verbose_name_plural': 'cinemahalls',
                'db_table': 'cinemahall',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=200)),
                ('status', models.IntegerField(default=1)),
            ],
            options={
                'verbose_name': 'movie',
                'verbose_name_plural': 'movies',
                'db_table': 'movie',
            },
        ),
        migrations.CreateModel(
            name='MovieScreens',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('available_seats', models.IntegerField()),
                ('status', models.IntegerField(default=1)),
                ('movie', models.ForeignKey(null='True', on_delete=django.db.models.deletion.CASCADE, to='apis.movie')),
            ],
            options={
                'verbose_name': 'moviescreens',
                'verbose_name_plural': 'moviescreenses',
                'db_table': 'moviescreens',
            },
        ),
        migrations.CreateModel(
            name='Screens',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('number', models.IntegerField()),
                ('seats', models.IntegerField(default=50)),
                ('status', models.IntegerField(default=1)),
                ('cinema_halls', models.ForeignKey(null='True', on_delete=django.db.models.deletion.CASCADE, to='apis.cinema_halls')),
            ],
            options={
                'verbose_name': 'screens',
                'verbose_name_plural': 'screenses',
                'db_table': 'screens',
            },
        ),
        migrations.CreateModel(
            name='MovieScreenTime',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('from_time', models.DateTimeField()),
                ('to_time', models.DateTimeField()),
                ('status', models.IntegerField(default=1)),
                ('movie_screens', models.ForeignKey(null='True', on_delete=django.db.models.deletion.CASCADE, to='apis.moviescreens')),
            ],
            options={
                'verbose_name': 'moviescreentime',
                'verbose_name_plural': 'moviescreentimes',
                'db_table': 'moviescreentime',
            },
        ),
        migrations.AddField(
            model_name='moviescreens',
            name='screens',
            field=models.ForeignKey(null='True', on_delete=django.db.models.deletion.CASCADE, to='apis.screens'),
        ),
        migrations.CreateModel(
            name='Cinema_Hall_Movies',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField(default=1)),
                ('cinema_halls', models.ForeignKey(null='True', on_delete=django.db.models.deletion.CASCADE, to='apis.cinema_halls')),
                ('movie', models.ForeignKey(null='True', on_delete=django.db.models.deletion.CASCADE, to='apis.movie')),
            ],
            options={
                'verbose_name': 'cinemahallmovies',
                'verbose_name_plural': 'cinemahallmovieses',
                'db_table': 'cinemahallmovies',
            },
        ),
        migrations.CreateModel(
            name='Bookings',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('bookingId', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('status', models.IntegerField(default=1)),
                ('movie_screen_time', models.ForeignKey(null='True', on_delete=django.db.models.deletion.CASCADE, to='apis.moviescreentime')),
                ('movie_screens', models.ForeignKey(null='True', on_delete=django.db.models.deletion.CASCADE, to='apis.moviescreens')),
                ('user', models.ForeignKey(null='True', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'booking',
                'verbose_name_plural': 'bookings',
                'db_table': 'booking',
            },
        ),
    ]
